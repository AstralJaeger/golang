name: Build
on:
  push:
  pull_request:

env:
  application_prefix: golang
  use_cgo: 0

jobs:
  build_application:
    name: Build Application
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22.x', 'latest']
        go-os: ['linux']
        go-arch: ['amd64', 'arm', 'arm64']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod download -x

      - name: Lint
        run: |
          go fmt $(go list ./... | grep -v /vendor/)
          go vet $(go list ./... | grep -v /vendor/)

      - name: Tag Branch
        id: branch_tag
        run: |
          if [ -z "${{ github.ref_name }}" ]; then
            echo "branch_tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" != "${{ github.event.repository.default_branch }}" ]; then
            echo "branch_tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "branch_tag=''" >> $GITHUB_OUTPUT
          fi

      - name: Test
        # Use TEST_ENV to determine if integration tests should be run in the application
        run: |
          export TEST_ENV=${{ github.event_name }}
          go test -json -race $(go list ./... | grep -v /vendor/) > TestResults-${{ steps.branch_tag.branch_tag }}-${{ matrix.go-version }}-${{ matrix.go-os }}-${{matrix.go-arch }}.json

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Go-results ${{ matrix.go-version }} ${{ matrix.go-os }} ${{matrix.go-arch }} ${{ steps.branch_tag.branch_tag }}
          path: TestResults-${{ steps.branch_tag.branch_tag }}-${{ matrix.go-version }}-${{ matrix.go-os }}-${{matrix.go-arch }}.json
          retention-days: 7
          if-no-files-found: error
      - name: Build Application
        run: CGO_ENABLED=${{ env.use_cgo }}; go build -o ./binaries/${{ env.application_prefix }}-${{ steps.branch_tag.branch_tag }}-${{ matrix.go-version }}-${{ matrix.go-os }}-${{matrix.go-arch }} .

      - name: Upload Application Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.application_prefix }} ${{ steps.branch_tag.branch_tag }} ${{ matrix.go-version }} ${{ matrix.go-os }} ${{matrix.go-arch }}
          path: ./binaries/${{ env.application_prefix }}-${{ steps.branch_tag.branch_tag }}-${{ matrix.go-version }}-${{ matrix.go-os }}-${{matrix.go-arch }}
          retention-days: 7
          if-no-files-found: error

  build_container:
    name: Build Container
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22.x', 'latest']
        go-os: ['linux']
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm,arm64,amd64

      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create container tags
        id: container_tags
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
          tags: |
            type=schedule
            type=semver,pattern={{version}}-${{ matrix.go-version }}
            type=semver,pattern={{major}}.{{minor}}-${{ matrix.go-version }}
            type=semver,pattern={{major}}-${{ matrix.go-version }}
            type=ref,event=branch,pattern={{branch}}-${{ matrix.go-version }}
            type=ref,event=pr
            type=sha
          flavor: |
            latest=true

      - name: Build container
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: '${{matrix.go-os}}/arm,${{matrix.go-os}}/arm64,${{matrix.go-os}}/amd64'
          push: ${{ github.event_name != 'pull_request' || github.ref_name == github.event.repository.default_branch }}
          tags: ${{ steps.container_tags.outputs.tags }}
          labels: ${{ steps.container_tags.outputs.labels }}
